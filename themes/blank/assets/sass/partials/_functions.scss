//
// Fun with functions:
// Also general mixins here too!
//

//
// Functions aqui
//
// Do some craziness to text shadows...
// @pararm {number} $n - number of shadows to add
// @pararm {number} $r - red value as in rgb
// @pararm {number} $g - green value
// @pararm {number} $b - blue value
// @pararm {number} $x - the x value in text-shadow rule set
// @pararm {number} $y - the y value in text-shadow rule set
// @pararm {number} $u - unit, px, ex, etc..
@function multiple-text-shadow ($n, $r, $g, $b, $x, $y, $u) {
    //$unit: '#{$u}';
    $value: '#{$x}#{$u} #{$y}#{$u} 0 rgba(#{$r}, #{$g}, #{$b}, 1),';
    @for $i from 0.5 through $n {
      $x: ($i * $x);
      $y: ($i * $y);
      $a: 1 / ($n * $i);
      // remove trailing comma...or not...
      $value: '#{$value} #{$x}#{$u} #{$y}#{$u} 0 ' + 'rgba(#{$r}, #{$g}, #{$b}, #{$a})' + ',';
    }
    @return unquote($value);
  }

  
//
// This produces a solid 3d 
// @param $color {value} - hex or rgba
// @param $num {number} - number of shadows to apply
// @param $spread {number} - the shadow's spread
// @param $blur {number} - the text shadow's blur
// @param $y {number} - the y value
// @param $x {number} - the x value
//

@function big-3d($x, $y, $blur, $spread, $color, $num) {
  $output: '#{$x}px #{$y}px #{$blur} #{$spread} #{$color}';
  @for $i from 1 to $num {
    $x: ($i + 1);
    $y: ($i + 1);
  }
  @return unquote($output);
}

// Mixins 

// mixin for basic padding
// todo: add {params}
// param {$media} : >=phone
// param {$padding} $pl/$pr = padding-right left etc...

@mixin basic-article-wrapper($breakpoint, $mw, $pl: #{initial}, $pr: #{initial}) {
  @include media(#{$breakpoint}) {
    max-width: $mw;
    padding-left: $pl;
    padding-right: $pr;
  }
}
 
//
// Make grids easier to utilize
// ex: @include addToGrid() {}
// 
   @mixin addToGrid(
    $breakpoint: "", 
    $col-start: "", 
    $col-end: "", 
    $row-start: "", 
    $row-end: "") {
    grid-template-columns: $col-start / $col-end;
    grid-template-rows: $row-start / $row-end;
    @content;
  }

// In some cases we might want to vary the kind of focus ring we apply,
// @Param 
//

  @mixin focus-ring(
    $type,
    $color: $site-focus-ring) {
    @if $type == "outline" {
      outline: dotted $color (1em / 16);
    } @else if $type == "border" {
      border: (1em / 16) dotted $color;
    } @else if $type == "box-shadow" {
      box-shadow: inset 0 0 0 (1em / 16) $color;
    }
  }

//
// SVG Overlay mixin for the home page
//

@keyframes simpleFadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}



// @keyframes slideBack {
//     0% {
//       transform: translateX(-100px);
//     }
//     100% {
//     transform: translateX(0px);
//   }
// }

@keyframes slideDownMedium {
  0% {
    opacity: 0;
    transform: translateY(-50px);
  }
  100% {
    opacity: 1;
    transform: translateY(0px);
  }
}

@keyframes slideDownLarge {
  0% {
    opacity: 0;
    transform: translateY(-175px);
  }
  100% {
    opacity: 1;
    transform: translateY(-20%);
  }
}

// @keyframes slideBack {
//     0% {
//       transform: translateX(-100px);
//     }
//     100% {
//     transform: translateX(0px);
//   }
// }

@mixin slideUpDown(
  $animation-name: slideDownMedium,
  $duration: 750ms,
  $direction: normal,
  $delay: 200ms,
  $iteration-count: 1,
  $timing-function: ease-out,
  $fill-mode: both) {
  animation:  $animation-name;
  animation-duration: $duration;
  animation-direction: $direction;
  animation-delay: $delay;
  animation-iteration-count: $iteration-count;
  animation-timing-function: ease-out;
  animation-fill-mode: $fill-mode;
}



  @mixin svgOverlay($clipPath: null) {
  
  .portfolioCard {
    // animation-name: simpleFade;
    animation-iteration-count: 1;
    animation-direction: reverse;
    // animation-name: slideBack;
    animation-duration: 0.2s;
    animation-timing-function: ease-in;
    animation-delay: 0;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-fill-mode: forwards;
    clip-path: url(#{$clipPath});
    opacity: 0.65;
    pointer-events: all;
    //transition: transform 0.2s;
    

    // &:hover {
    //   clip-path: none;
    //   // opacity: 1;
    //   //animation-direction: reverse;
    //   animation-duration: 0.3s;
    //   animation-name: simpleFade;
    //   animation-iteration-count: 1;
    // }
  }
  .portfolioCardOff {
    // animation-name: slideOver;
    animation-duration: 0.2s;
    animation-timing-function: ease-out;
    animation-delay: 0;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-fill-mode: forwards;
    //z-index: 9000;
    clip-path: none;
    // opacity: 0;
    // animation-name: simpleFadeOut;
    animation-iteration-count: 1;
    pointer-events: all
  }
}

