//
// Fun with functions:
// Also general mixins here too!
//

//
// Functions aqui
//

// Very Basic Text Shadow Mixin:
@mixin basic-drop-shadow($type: text) {
  @if $type == text {
    text-shadow: 2px 2px 2px $site-black;
  } @else if $type == box {
    box-shadow: 2px 2px 2px $site-black;
  } @else if $type == svg {
    filter: drop-shadow(1px 1px 1px $site-black);
  }
}

// Do some craziness to text shadows...
// @param {number} $n - number of shadows to add
// @param {number} $r - red value as in rgb
// @param {number} $g - green value
// @param {number} $b - blue value
// @param {number} $x - the x value in text-shadow rule set
// @param {number} $y - the y value in text-shadow rule set
// @param {number} $u - unit, px, ex, etc..
@function multiple-text-shadow($n, $r, $g, $b, $x, $y, $u) {
  //$unit: '#{$u}';
  $value: '#{$x}#{$u} #{$y}#{$u} 0 rgba(#{$r}, #{$g}, #{$b}, 1),';
  @for $i from 0.5 through $n {
    $x: ($i * $x);
    $y: ($i * $y);
    $a: 1 / ($n * $i);
    // remove trailing comma...or not...
    $value: '#{$value} #{$x}#{$u} #{$y}#{$u} 0 '+'rgba(#{$r}, #{$g}, #{$b}, #{$a})'+',';
  }
  @return unquote($value);
}

//
// This produces a solid 3d
// @param $color {value} - hex or rgba
// @param $num {number} - number of shadows to apply
// @param $spread {number} - the shadow's spread
// @param $blur {number} - the text shadow's blur
// @param $y {number} - the y value
// @param $x {number} - the x value
//

@function big-3d($x, $y, $blur, $spread, $color, $num) {
  $output: '#{$x}px #{$y}px #{$blur} #{$spread} #{$color}';
  @for $i from 1 to $num {
    $x: ($i + 1);
    $y: ($i + 1);
  }
  @return unquote($output);
}

// Mixins

// mixin for basic padding
// todo: add {params}
// param {$media} : >=phone
// param {$padding} $pl/$pr = padding-right left etc...

@mixin visually-hidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

// $mw = max width
// $pl = padding left
// $pr = padding right
@mixin basic-article-wrapper(
  $breakpoint,
  $mw,
  $pl: #{initial},
  $pr: #{initial}
) {
  @include media(#{$breakpoint}) {
    max-width: $mw;
    padding-left: $pl;
    padding-right: $pr;
  }
}

//
// Make grids easier to utilize
// ex: @include add-to-grid() {}
//
@mixin add-to-grid(
  $breakpoint: '',
  $col-start: '',
  $col-end: '',
  $row-start: '',
  $row-end: ''
) {
  grid-template-columns: $col-start / $col-end;
  grid-template-rows: $row-start / $row-end;
  @content;
}

// In some cases we might want to vary the kind of focus ring we apply,
// @Param
//

@mixin focus-ring($type, $color: $site-focus-ring) {
  @if $type == 'outline' {
    outline: dotted $color (1em / 16);
  } @else if $type == 'border' {
    border: (1em / 16) dotted $color;
  } @else if $type == 'box-shadow' {
    box-shadow: inset 0 0 0 (1em / 16) $color;
  }
}

//
// SVG Overlay mixin for the home page
//

@keyframes simpleFadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes slideDownMedium {
  0% {
    opacity: 0;
    transform: translateY(-50px);
  }
  100% {
    opacity: 1;
    transform: translateY(0px);
  }
}

@keyframes slideDownLarge {
  0% {
    opacity: 0;
    transform: translateY(-175px);
  }
  100% {
    opacity: 1;
    transform: translateY(-20%);
  }
}

@mixin slide-up-down(
  $animation-name: slideDownMedium,
  $duration: 750ms,
  $direction: normal,
  $delay: 200ms,
  $iteration-count: 1,
  $timing-function: ease-out,
  $fill-mode: both
) {
  animation: $animation-name;
  animation-duration: $duration;
  animation-direction: $direction;
  animation-delay: $delay;
  animation-iteration-count: $iteration-count;
  animation-timing-function: ease-out;
  animation-fill-mode: $fill-mode;
}

@mixin svg-overlay($clipPath: null) {
  .portfolioCard {
    animation-duration: 250ms;
    animation-iteration-count: 1;
    animation-timing-function: ease-in;
    animation-delay: 0s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-fill-mode: forwards;
    clip-path: url(#{$clipPath});
    opacity: 0.5;
    pointer-events: all;
  }
  .portfolioCardOff {
    animation-duration: 250ms;
    animation-timing-function: ease-out;
    animation-delay: 0;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-fill-mode: forwards;
    clip-path: none;
    animation-iteration-count: 1;
    pointer-events: all;
  }
}
