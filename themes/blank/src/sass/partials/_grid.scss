///
/// Grid Settings Y Styles
///


///
/// Header
///

/// Some Common Variables that should be moved to a separate file, possibly the _functions mixin...
/// Desktop view ports


$left-column: 25vw;

.siteHeader {
  
  &__site-name-container,
  &__site-navigation {
    /// set up the grids for the breakpoints... really need to make this a mixin or function

    //function take named media q. as args
    //          take number after each as arg of number of frs to output

    @include media(">=phone") {
      grid-template-columns: 1fr;
      grid-template-rows: 3em;
    }

    @include media(">=tablet") {
      grid-template-columns: 1fr 1fr 1fr;
      grid-template-rows: 8em;
    }

    @include media(">=desktop") {
      grid-template-columns: $left-column 1fr 1fr 1fr;
      grid-template-rows: 10em;
    }

  display: grid;
  }

  &__site-name {
    @include media(">=phone") {
      grid-column: 1 / 1;
      padding-left: 6vw;
    }

    @include media(">=tablet") {
      grid-column: 2 / 4;
      padding-left: 0;
      //padding: 0.5em 0 3vw 0.65em;
    }
  }

  /// Do some adjusting of the site nav
  &__site-navigation {
    grid-template-rows: initial;

    ul {
      @include media(">=phone"){
        grid-column: 1
      }

      @include media(">=tablet"){
        grid-column: 2 / 4
      }

      @include media(">=desktop"){
        grid-column: 2 / 4;
      }
    }
  }
}

//
// TODO: something...
//
.grid-wrapper {

  @include media(">=phone") {
    grid-template-columns: 1fr;
    grid-template-rows: auto;
  }

  @include media(">=tablet") {
    grid-template-columns: 1fr 1fr 1fr;
  }

  @include media(">=desktop"){
    grid-template-columns: $left-column 1fr 1fr 1fr;
    //grid-template-rows: calc(100vh / 4) calc(100vh / 4) calc(100vh / 4) calc(100vh / 4);
  }

  display: grid;

  > div {
    border: 1px solid hsla(327, 94%, 48%, 0.1);
    }



    .prime-box {
      @include media(">=phone") {
       grid-column: 1 / 1;
       grid-row: 1 /1;

       svg {
        height: auto;
        padding: 1em;
        width: 100%;
        }
      }

      @include media(">=tablet") {
        grid-column: 1 / 1;
        grid-row: 1 / 1;
      }
    } // prime box



    &__listParent,
    .subtitle-grid-container {
      @include media(">=phone") {
        grid-column: 1 / 1;
        grid-row: 2 / 2;
       }

       @include media(">=tablet") {
        grid-column: 2 / 4;
        grid-row: 1 / 1;
       }
      } // subtitle grid container

      .jumbo-grid-container {
       @include media (">=phone") {
          grid-column: 1 / 1;
          grid-row: 10 / 12;

        &__content {
        // position: fixed;
        top: 0;
        }
       } // / phone breakpoint

        @include media(">=tablet") {
          grid-column: 2 / 5;
       }
    } // /.jumbo-grid-container



///
/// Home page portfolio grid & flex
///
      .portfolio-flex {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        margin: 0;
        padding: 0;

          &__mastHead {
            flex: 1 1 100%;
          }

          &__summary {

            a {
              display: block;
            }

            @include media(">=phone") {
              //background-color: $site-acid-green;
              flex: 1 1 100%;
            }

            @include media(">=tablet"){
              //background-color: $site-green-blue;
              //flex: 1 1 25%;
              max-width: 25%;
            }
          }

          &__content {

            figure {
              margin: 0;
              padding: 0;

              img {
                height: 100%;;
                width: 100%;
                border: 0
              }

              // Need to find a better way to add this color class to the overlay.
             // adding the class (read: which color to use) is fine and all but the css below is seemingly clunky, JS might better be used to randomize which colors are used as overlays and _not_ add the color at the post level, which would require prior knowledge of which color : classes exist...

             // that said, a better step would be to write some JS so apply those color classes on its own and the we dont have to worry about applying them manually anywhere...

             // Same w/ the overlays... ðŸ¤”
             // also these SVG rules should be moved to a partial...

             // and probably made into a for/each function instead of verbosely outputting here...

              &.fourDots {
                @include svgOverlay(#four_dots);
              }

              &.twoSquares {
                @include svgOverlay(#two_squares);
              }

              &.overDots {
                @include svgOverlay(#over_dots);
              }

              &.oneDiagonal {
               @include svgOverlay(#one_diagonal);
              }

              &.oneDiagonal-45 {
                @include svgOverlay(#one_diagonal);
                //transform: rotate(45deg);
               }

              &.boxDiagonals {
                @include svgOverlay (#box_diagonals);
              }

              &.variableDots {
                @include svgOverlay (#variable_dots);
              }

              &.diagonalDot {
                @include svgOverlay (#diagonal_dot);
              }

              &.oneCircle {
                @include svgOverlay (#quarter_circle);
              }

              &.squaresCircles {
                @include svgOverlay (#squares_circles);
              }

              &.bigCircle {
                @include svgOverlay (#big_circle);
              }

              &.bigPill {
                @include svgOverlay (#big_pill);
              }
            } // /figure
          }

        // handles placement on the parent grid:
        @include media(">=phone") {
          grid: auto / 1fr; 
          grid-column: 1 / 1;
          grid-row: 3 / 9;
        }

        @include media(">=tablet"){
          grid: auto / 1fr 1fr 1fr 1fr;
          grid-column: 1 / 4;
        }

        @include media(">=desktop") {
          grid: auto / 1fr 1fr 1fr 1fr 1fr;
          grid-column: 1 / 5;
        }
      }

      // /flex box version of the portfolio grid...

      .portfolio-grid {

        &__mastHead {
          @include media(">=phone") {
            grid-column: 1 / 1;
          }
          
          @include media(">=tablet") {
            grid-column: 1 / 4;
          }

          @include media(">=desktop") {
            grid-column: 1 / 5;
          }

          grid-row: 1 / 1;
        } // /__masthead

         @include media(">=phone") {
          grid: auto / 1fr; 
          grid-column: 1 / 1;
          grid-row: 3 / 9;
        }

        @include media(">=tablet") {
          grid: auto / 1fr 1fr 1fr 1fr;
          grid-column: 1 / 4;
        }

        @include media(">=desktop") {
          grid: auto / 1fr 1fr 1fr 1fr 1fr;
          grid-column: 1 / 5;
        }

        display: grid;

        & > article {
          //
        }

        &__summary {
          @include media(">=phone") {
            background-color: $site-punk-pink;
          }
          @include media(">=tablet") {
            background-color: hsl(22, 100%, 50%);
          }
          @include media(">=desktop") {
            background-color: hsl(80, 61%, 50%);
          }
        }
    }

  @include media(">=phone") {
// .jumbo-grid-container {
    //   grid-column: 1 / 1;
    //   grid-row: 3 / 9;

      // &__content {
      // // position: fixed;
      //  top: 0;
      // }
    //}

    // .portfolio-grid-container {
    //   grid-column: 1 / 1;
    //   grid-row: 10 / 12;
    // }

    .grid-site-data {
      background-color: $site-background-color;
      grid-column: 1 / 1;
      grid-row: 11 / 12;
    }
  } // / phone breakpoint 

    

  @include media(">=tablet") {
    
    // .prime-box {
    //   grid-column: 1 / 1;
    //   grid-row: 1 / 1;
    // }

    // .subtitle-grid-container {
    //   grid-column: 2 / 3;
    //   grid-row: 1 / 1;
    //  }
  }

  @include media(">=desktop") {
    // background: #098765;
  }
}

.portfolioWrapper {
  &__list-parent {
    padding: 0;
    margin: 0;
  }
}